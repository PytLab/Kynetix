rxn_expressions = [
    'CO_g + *_t -> CO_t',                       # CO adsorption at top site.
    'CO_g + *_b -> CO_b',                       # CO adsorption at bridge site.
    'CO_g + *_h -> CO_h',                       # CO adsorption at hcp site.
    'CO_g + *_f -> CO_f',                       # CO adsorption at fcc site.
    'O2_g + 2*_t -> O2_2t',                     # O2 adsorption lying at top sites.
    'O2_2t + 2*_f <-> 2*_f + O-O_2t -> 2O_f + 2*_t',  # O2 dissociate directly.
    'CO_t + O2_2t + *_f <-> OCO-O_3t + *_f -> CO2_g + O_f + 3*_t',  # O2 dissociate with CO
    'CO_g + O2_2t + *_t -> CO_t + O2_2t',       # CO adsorbed besides O2
    'CO_t + O2_g + 2*_t -> CO_t + O2_2t',       # O2 adsorbed besides CO
    'CO_t + O2_2t + *_f <-> OCO-O_2t + *_t + *_f -> CO2_g + O_f + 3*_t',  # O2 dissociate with CO
    'O2_2t + CO_g + *_t -> CO_t + O2_2t',       # CO adsorbed besides O2
    'O2_g + CO_t + 2*_t -> CO_t + O2_2t',       # O2 adsorbed besides CO
    'O_h + CO_f <-> O-CO_f + *_t -> CO2_g + *_t + *_f',  # O and CO couple
    'O_f + CO_t <-> O-CO_t + *_f -> *_t + *_f + CO2_g',  # O and CO couple
    'O_h + CO_t <-> O-CO_t + *_h -> *_t + *_h + CO2_g',  # O and CO couple
]

# Gas pressure.
species_definitions = {}
species_definitions['CO_g'] = {'pressure': 0.01}    # define the gas pressures
species_definitions['O2_g'] = {'pressure': 0.2}  # 0.094
species_definitions['CO2_g'] = {'pressure': 0.01}

# Site info.
species_definitions['f'] = {'site_name': 'f', 'type': 'site'}
species_definitions['h'] = {'site_name': 'hcp', 'type': 'site'}
species_definitions['b'] = {'site_name': 'bridge', 'type': 'site'}
species_definitions['t'] = {'site_name': 'top', 'type': 'site'}

# Temperature.
temperature = 298  # K

# Lattice information.
surface_name = 'Pt-111'

# Unitcell.
cell_vectors = [[1.0, 0.0, 0.0],
                [0.5, 0.87, 0.0],
                [0.0, 0.0, 1.0]]

basis_sites = [[0.0, 0.0, 0.0],
               [0.0, 0.5, 0.0],
               [0.5, 0.0, 0.0],
               [0.5, 0.5, 0.0],
               [1.0/3.0, 1.0/3.0, 0.0],
               [2.0/3.0, 2.0/3.0, 0.0]]

unitcell_area = 7.15e-20  # m^2
active_ratio = 1./3        # Ast / Auc

# Supercell.
repetitions = (20, 20, 1)   # (x, y, z)
periodic = (True, True, False)           # periodic boundary condition
possible_element_types = ["O_u", "O_d", "O_l", "O_r", "O_ur", "O_dr", "O_dl", "O_ul", "V", "O_s", "C"]
empty_type = "V"
possible_site_types = ["P"]


# KMC model attributes.
# specify tools for model to use
tools = ['parser', 'solver', 'corrector']
parser = 'KMCParser'  # default
solver = 'KMCSolver'
corrector = "ThermodynamicCorrector"

# KMC loop control parameters.
nstep = 5000                           # number of KMC loop step
seed = 13996                         # seed for random number generator
random_generator = 'MT'              # type of pseudo random number generator, 'MT' | 'MINSTD' | 'RANLUX24' | 'RANLUX48'
analysis = ["CoveragesAnalysis"]     # ['CoveragesAnalysis', 'TOFAnalysis']
analysis_interval = [10]
trajectory_dump_interval = nstep/25

